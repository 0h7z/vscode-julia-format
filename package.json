{
	"name": "vscode-julia-format",
	"displayName": "Julia Formatter",
	"publisher": "0h7z",
	"icon": "icon.ico",
	"version": "1.3.6",
	"license": "AGPL-3.0-only",
	"description": "A formatter for the Julia language",
	"repository": {
		"type": "git",
		"url": "https://github.com/0h7z/vscode-julia-format"
	},
	"issues": {
		"url": "https://github.com/0h7z/vscode-julia-format/issues"
	},
	"categories": [
		"Formatters"
	],
	"activationEvents": [
		"onLanguage:julia"
	],
	"keywords": [
		"julia",
		"format",
		"style"
	],
	"main": "./main.js",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Julia Formatter",
			"properties": {
				"julia-format.args": {
					"type": "string",
					"default": "--startup-file=no --project=@vscode-julia-format --compile=min -t auto",
					"markdownDescription": "Command line argument(s) for Julia. See [Command-line switches for Julia](https://docs.julialang.org/en/v1/manual/command-line-interface/#command-line-interface)."
				},
				"julia-format.flag": {
					"type": "string",
					"default": "style=DefaultStyle(), indent=4, margin=256, always_for_in=true, for_in_replacement=\"∈\", whitespace_typedefs=true, import_to_using=true, whitespace_in_kwargs=true, align_struct_field=true, align_assignment=true, align_conditional=true, align_pair_arrow=true, normalize_line_endings=\"unix\", align_matrix=true, join_lines_based_on_source=true, indent_submodule=true, surround_whereop_typeparameters=false, yas_style_nesting=true",
					"markdownDescription": "Flag(s) for `JuliaFormatter`. See [Formatting Options](https://domluna.github.io/JuliaFormatter.jl/stable/#Formatting-Options) and [options.jl](https://github.com/domluna/JuliaFormatter.jl/blob/master/src/options.jl)."
				},
				"julia-format.inop": {
					"type": "string",
					"default": "= ∈",
					"markdownDescription": "The `in`-like operator(s) for doing `for_in_replacement`, seperated by space. Or, set this to empty string to use the default rule of `JuliaFormatter`."
				},
				"julia-format.tabs": {
					"type": "number",
					"default": 4,
					"minimum": 0,
					"markdownDescription": "Tab size, which should be the same as `indent`'s value in `#julia-format.flag#`. Or, set this to 0 to use space(s)."
				}
			}
		}
	},
	"scripts": {
		"all": "pnpm compile && pnpm build && pnpm package",
		"upd": "pnpm up --latest && pnpm add -D @types/vscode@1.69 && pnpm add diff@5",
		"build": "pnpm esbuild --minify",
		"compile": "tsc -p .",
		"esbuild": "esbuild src/main.ts --bundle --outdir=out --external:vscode --platform=node --charset=utf8",
		"package": "pnpm dlx vsce package --no-dependencies",
		"prepackage": "julia pre-package.jl",
		"postpackage": "julia post-package.jl"
	},
	"dependencies": {
		"@rauschma/stringio": "^1.4.0",
		"diff": "^5.2.0",
		"untildify": "^5.0.0"
	},
	"devDependencies": {
		"@types/diff": "^7.0.1",
		"@types/node": "^22.13.4",
		"@types/vscode": "~1.69.1",
		"esbuild": "^0.25.0",
		"typescript": "^5.7.3"
	},
	"engines": {
		"node": ">=22.0.0",
		"pnpm": ">=10.0.0",
		"vscode": "^1.69.0"
	},
	"pnpm": {
		"ignoredOptionalDependencies": [
			"*android*",
			"*arm*",
			"*bsd*",
			"*ia32*",
			"*loong64*",
			"*mips64*",
			"*musl*",
			"*pc64*",
			"*riscv64*",
			"*s390x*",
			"*sunos*"
		],
		"overrides": {
			"esbuild": "*"
		}
	}
}
